rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to validate file size (max 20MB)
    function isValidFileSize() {
      return request.resource.size <= 20 * 1024 * 1024; // 20MB
    }

    // Helper function to validate file type
    function isValidFileType() {
      return request.resource.contentType.matches('application/pdf|image/jpeg|image/png|image/jpg');
    }

    // Caregiver documents storage
    match /caregiver-documents/{userId}/{document=**} {
      // Allow authenticated users to read their own documents
      allow read: if isAuthenticated() && isOwner(userId);

      // Allow authenticated users to upload their own documents with validation
      allow write: if isAuthenticated()
                   && isOwner(userId)
                   && isValidFileSize()
                   && isValidFileType();

      // Allow delete only for document owner
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Admin access to all documents (to be implemented)
    match /caregiver-documents/{userId}/{document=**} {
      // Allow admins to read all documents
      allow read: if isAuthenticated()
                  && request.auth.token.admin == true;
    }

    // Profile pictures storage (for future use)
    match /profile-pictures/{userId}/{picture} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
                   && isOwner(userId)
                   && request.resource.size <= 5 * 1024 * 1024 // 5MB max for profile pics
                   && request.resource.contentType.matches('image/.*');
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Block all other paths by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}